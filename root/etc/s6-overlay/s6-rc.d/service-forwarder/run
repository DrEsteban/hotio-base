#!/command/with-contenv bash
# shellcheck shell=bash

umask "${UMASK}"

IFS=',' read -ra forward_ports <<< "${VPN_AUTO_PORT_FORWARD_TO_PORTS%,}"
for forward_port in "${forward_ports[@]}"; do
    [[ ! ${forward_port} =~ "@" ]] && continue
    internal="${forward_port##*@}"
    new_rule=$(grep "iifname \"${VPN_CONF}\" ${internal##*/} dport ${forward_port%@*} redirect to :${internal##*/} " <<< "$(nft --handle list chain inet hotio prerouting)" | sed 's/.* # handle //g')
    if [[ -z "${new_rule}" ]]; then
        nft add rule inet hotio prerouting iifname "${VPN_CONF}" "${internal##*/}" dport "${forward_port%@*}" redirect to :"${internal%/*}"
    fi
    echo "[INF] [$(date '+%Y-%m-%d %H:%M:%S')] [VPN] Redirected port [${forward_port%@*}/${internal##*/}] to [${internal%/*}/${internal##*/}]."
done

re='^[0-9]+$'
if [[ "${VPN_AUTO_PORT_FORWARD}" =~ $re ]] ; then
    echo "${VPN_AUTO_PORT_FORWARD}" > "${CONFIG_DIR}/wireguard/forwarded_port"
fi

sleep 10

old_port="0"
while true; do
    if [[ -f "${CONFIG_DIR}/wireguard/forwarded_port" ]]; then
        port=$(sed -n '1p' "${CONFIG_DIR}/wireguard/forwarded_port")
        if [[ "${old_port}" != "${port}" ]]; then
            echo "[INF] [$(date '+%Y-%m-%d %H:%M:%S')] [VPN] Forwarded port is [${port}]."
            IFS=',' read -ra forward_ports <<< "${VPN_AUTO_PORT_FORWARD_TO_PORTS%,}"
            for forward_port in "${forward_ports[@]}"; do
                [[ ${forward_port} =~ "@" ]] && continue
                internal="${forward_port##*@}"
                old_rule=$(grep "iifname \"${VPN_CONF}\" ${internal##*/} dport ${old_port} redirect to :${internal##*/} " <<< "$(nft --handle list chain inet hotio prerouting)" | sed 's/.* # handle //g')
                if [[ -n "${old_rule}" ]]; then
                    nft delete rule inet hotio prerouting handle "${old_rule}"
                fi
                new_rule=$(grep "iifname \"${VPN_CONF}\" ${internal##*/} dport ${port} redirect to :${internal##*/} " <<< "$(nft --handle list chain inet hotio prerouting)" | sed 's/.* # handle //g')
                if [[ -z "${new_rule}" ]]; then
                    nft add rule inet hotio prerouting iifname "${VPN_CONF}" "${internal##*/}" dport "${port}" redirect to :"${internal%/*}"
                fi
                echo "[INF] [$(date '+%Y-%m-%d %H:%M:%S')] [VPN] Redirected port [${port}/${internal##*/}] to [${internal%/*}/${internal##*/}]."
            done
            echo "[INF] [$(date '+%Y-%m-%d %H:%M:%S')] [VPN] Added nftables prerouting rules:"
            nft list chain inet hotio prerouting
            # shellcheck source=/dev/null
            source "${APP_DIR}/forwarded_port_update_app"
            old_port="${port}"
        fi
    fi
    sleep 60
done
