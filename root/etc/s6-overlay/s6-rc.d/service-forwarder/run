#!/command/with-contenv bash
# shellcheck shell=bash

umask "${UMASK}"

sleep 10

while true; do
    if [[ -f "${CONFIG_DIR}/wireguard/forwarded_port" ]]; then
        port=$(sed -n '1p' "${CONFIG_DIR}/wireguard/forwarded_port")
        status=$(sed -n '2p' "${CONFIG_DIR}/wireguard/forwarded_port")
        if [[ "${status}" == "changed" ]]; then
            iptables -t nat -F PREROUTING
            ip6tables -t nat -F PREROUTING
            IFS=',' read -ra forward_ports <<< "${VPN_AUTO_PORT_FORWARD_TO_PORTS%,}"
            for forward_port in "${forward_ports[@]}"; do
                external_port="${forward_port%@*}"
                [[ ${external_port} =~ "/" ]] && external_port="${port}"
                internal_port_proto="${forward_port##*@}"
                internal_port="${internal_port_proto%/*}"
                protocol="${internal_port_proto##*/}"
                if [[ "${external_port}" != "${internal_port}" ]]; then
                    iptables -t nat -A PREROUTING -i "${VPN_CONF}" -p "${protocol}" --dport "${external_port}" -j REDIRECT --to-ports "${internal_port}"
                    ip6tables -t nat -A PREROUTING -i "${VPN_CONF}" -p "${protocol}" --dport "${external_port}" -j REDIRECT --to-ports "${internal_port}"
                    echo "[INF] [$(date '+%Y-%m-%d %H:%M:%S')] [VPN] Redirected port [${external_port}/${protocol}] to [${internal_port}/${protocol}]."
                fi
            done
            # shellcheck source=/dev/null
            source "${APP_DIR}/forwarded_port_update_app"
            echo "${port}" > "${CONFIG_DIR}/wireguard/forwarded_port"
            echo "updated" >> "${CONFIG_DIR}/wireguard/forwarded_port"
        fi
    fi
    sleep 60
done
